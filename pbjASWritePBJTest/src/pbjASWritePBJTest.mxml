<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" applicationComplete="initApp()">
  
  <mx:Script>
  <![CDATA[
    import __AS3__.vec.Vector;
    import flash.utils.ByteArray;
    
    import mx.controls.Alert;
 
    import pbjAS.ops.OpMov;
    import pbjAS.ops.OpMul;
    import pbjAS.regs.RFloat;
    import pbjAS.PBJType;
    import pbjAS.params.Parameter;
    import pbjAS.PBJ;
    import pbjAS.PBJAssembler;
    import pbjAS.PBJChannel;
    import pbjAS.params.Texture;
    import pbjAS.ops.OpSampleNearest;
  
    private function initApp():void
    {
      var myPBJ:PBJ = new PBJ();
      myPBJ.version = 1;
      myPBJ.name = "OpSampleNearest";
      myPBJ.metadatas = [];
      myPBJ.parameters = [{name:"_OutCoord", p:new Parameter(PBJType.TFloat2, false, new RFloat(0, [PBJChannel.R, PBJChannel.G])), metas:[]}, // f0.rg
        {name:"texture", p:new Texture(1, 0), metas:[]}, // t0
        {name:"result", p:new Parameter(PBJType.TFloat, true, new RFloat(1)), metas:[]} // f1
        ];
      myPBJ.code = [
        new OpSampleNearest(new RFloat(1), new RFloat(0, [PBJChannel.R, PBJChannel.G]), 0), // texn    f1, f0.rg, t0
      ];

      var output:ByteArray = PBJAssembler.assemble(myPBJ);

      var f:File = File.desktopDirectory.resolvePath("test.pbj");
      var fStream:FileStream = new FileStream();
      fStream.open(f, FileMode.WRITE);
      fStream.writeBytes(output);
      fStream.close();
      
      var width:uint = 10;

      var texture:Vector.<Number> = new Vector.<Number>();

      for (var i:int = 0; i < width; i++)
      {
          texture.push(i);
      }

      var testShader:Shader = new Shader(output);

      testShader.data.texture.width = width;
      testShader.data.texture.height = 1;
      testShader.data.texture.input = texture;

      var result:Vector.<Number> = new Vector.<Number>;

      var shaderJob:ShaderJob = new ShaderJob(testShader, result, width, height);
      shaderJob.start(true);

	    for (var j:int = 0; j < texture.length; j++)
      {
          var actual:Number = texture[j];
          var tested:Number = result[j];

          if (actual != tested)
          {
            ta.text = "The tested value at " + i + " was not correct. actual = " + actual + " | tested = " + tested + "\n" + texture + "\n" + result;
          }
      }

    }
  ]]>
  </mx:Script>
  
  <mx:TextArea id="ta" width="100%" height="100%"/>
  
</mx:WindowedApplication>