<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" applicationComplete="init()">

  <mx:Script>
    <![CDATA[
      import pbjAS.params.Texture;
      import mathpbj.MathFunctionJob;
      import mathpbj.MathEvent;

      private var primes:Vector.<Number>;
      
      private var startTime:Date;

      private var mathFunc:MathFunctionJob;

      private function init():void
      {
        primes = new Vector.<Number>();
        
        mathFunc = new MathFunctionJob();
        mathFunc.addEventListener(MathEvent.COMPLETE, handleMathFuncComplete);
        mathFunc.add("div");
        
        var t:Timer = new Timer(250);
        t.addEventListener(TimerEvent.TIMER, tick);
        t.start();
      }
      
      private function tick(event:TimerEvent):void
      {
        ta.text = primes.toString();
      }

      private function startPBJ():void
      {
        ta.text = "";

        primes = new Vector.<Number>();

        var l:Number = new Number(limit.selectedItem);

        startTime = new Date();

        var texture:Vector.<Number> = new Vector.<Number>();

        for (var i:Number = 2; i <= l; i++)
        {
          texture.push(i);
        }
        
        mathFunc.input = texture;

        findPrimes(2);
      }

      private function findPrimes(evaluator:Number):void
      {
        mathFunc.inputParams["divisor"] = evaluator;
        mathFunc.start();
      }

      private function handleMathFuncComplete(event:MathEvent):void
      {
        var results:Vector.<Number> = event.results;

        var nextToCheck:Number = 0;
        
        // check for primes
        var i:uint = 0;
        for each (var n:Number in results)
        {
          if (n == 1)
          {
            primes.push(event.currentTarget.input[i]);
          }
          else if ((n > 1) && ((n % 1) != 0) && (nextToCheck == 0))
          {
            nextToCheck = event.currentTarget.input[i];
          }
          else if ((n % 1) == 0)
          {
            event.currentTarget.input[i] = 1;
          }
          
          i++;
        }

        if (nextToCheck != 0)
        {
          findPrimes(nextToCheck);
        }
        else
        {
          rl.text = (new Date().time - startTime.time) + " ms";
        }
      }

    ]]>
  </mx:Script>

  <mx:Panel title="Primes" width="100%" height="100%">
    <mx:Label id="rl"/>
    <mx:TextArea id="ta" width="100%" height="100%" focusEnabled="false" borderStyle="none" editable="false"/>
    <mx:ControlBar>
      <mx:ComboBox id="limit">
        <mx:dataProvider>
          <mx:Array>
            <mx:Number>10</mx:Number>
            <mx:Number>100</mx:Number>
            <mx:Number>1000</mx:Number>
            <mx:Number>10000</mx:Number>
            <mx:Number>100000</mx:Number>
            <mx:Number>1000000</mx:Number>
          </mx:Array>
        </mx:dataProvider>
      </mx:ComboBox>
      <mx:Button label="Find Primes!" click="startPBJ()"/>
    </mx:ControlBar>
  </mx:Panel>

</mx:Application>